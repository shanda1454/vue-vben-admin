
.bpmn-designer-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  position: relative;
  padding: 16px;
  
  .toolbar-card {
    margin-bottom: 0; // 移除工具栏下方的间距
    border-bottom: none; // 移除底部边框
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    z-index: 2; // 确保卡片在上层
    box-shadow: 0 2px 5px -2px rgba(0, 0, 0, 0.08); // 添加微妙的阴影效果
  }

  .bpmn-content-wrapper {
    flex: 1;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    height: calc(100vh - 180px);
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    border-radius: 4px;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    margin-top: -1px; // 微调位置，让边框重叠
  }

  .bpmn-content {
    display: flex;
    flex: 1;
    height: 100%;
    overflow: hidden;
    background-color: hsl(var(--background));
    position: relative;
    border: 1px solid hsl(var(--border));
    border-radius: 4px;
    border-top-left-radius: 0;
    border-top-right-radius: 0;

    .bpmn-canvas {
      flex: 1;
      height: 100%;
      background-color: hsl(var(--card));
      position: relative;
      /* 确保子绝对定位元素相对于此元素定位 */
      border-right: 1px solid hsl(var(--border));

      // 移除选中和点击时的边框
      &:focus,
      &:focus-visible,
      &:focus-within {
        outline: none !important;
        box-shadow: none !important;
        border-color: hsl(var(--border)) !important;
      }

      /* 栅格层样式 */
      .bpmn-grid-layer {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        pointer-events: none;
        z-index: 10;
      }
    }

    .bpmn-panel-container {
      width: 320px;
      height: 100%;
      overflow: hidden;
      position: relative;
      background-color: hsl(var(--card));
      border-left: 1px solid hsl(var(--border));
      display: flex;
      flex-direction: column;

      .bpmn-panel {
        width: 100%;
        height: 100%;
        overflow: auto;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }
    }
  }
}

// 修复属性面板可滚动区域
:deep(.bpp-properties-panel) {
  background-color: hsl(var(--card)) !important;
  border-color: hsl(var(--border)) !important;
  color: hsl(var(--foreground)) !important;
  height: auto !important;
  max-height: none !important;
  overflow: visible !important;
}

:deep(.bpp-properties-header) {
  background-color: hsl(var(--secondary)) !important;
  color: hsl(var(--secondary-foreground)) !important;
  border-color: hsl(var(--border)) !important;
  position: sticky;
  top: 0;
  z-index: 10;
}

:deep(.bpp-properties-tab-bar) {
  background-color: hsl(var(--accent)) !important;
  border-color: hsl(var(--border)) !important;
  position: sticky;
  top: 35px;
  z-index: 9;
}

:deep(.bpp-properties-tabs-links li.bpp-active a) {
  border-color: hsl(var(--primary)) !important;
  color: hsl(var(--primary)) !important;
}

:deep(.bpp-properties-group) {
  border-color: hsl(var(--border)) !important;
}

:deep(.bpp-properties-entry input,
  .bpp-properties-entry select,
  .bpp-properties-entry textarea) {
  background-color: hsl(var(--input-background)) !important;
  border-color: hsl(var(--input)) !important;
  color: hsl(var(--foreground)) !important;
}

// 调色板样式优化
:deep(.djs-palette) {
  background-color: hsl(var(--card)) !important;
  border-color: hsl(var(--border)) !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;
  border-radius: 6px !important;
  overflow: hidden !important;
  top: 10px !important;
  left: 10px !important;
}

:deep(.djs-palette-entries) {
  border-color: hsl(var(--border)) !important;
  background-color: hsl(var(--card)) !important;
}

:deep(.djs-palette-entries .entry) {
  border-bottom: 1px solid hsla(var(--border) / 0.3) !important;

  &:hover {
    background-color: hsl(var(--accent-hover)) !important;
  }
}

// 右键菜单样式优化
:deep(.djs-context-pad) {
  background-color: transparent !important;
  box-shadow: none !important;

  .entry {
    background-color: transparent !important;
    border: none !important;
    box-shadow: none !important;

    &:hover {
      background-color: transparent !important;
    }

    // 修复图标
    i {
      &:before {
        color: hsl(var(--foreground)) !important;
      }
    }

    svg,
    path,
    circle,
    rect,
    polygon {
      fill: hsl(var(--foreground)) !important;
      stroke: none !important; // 去掉边框
    }

    // 针对特定图标类型的覆盖
    &[class*='bpmn-icon'] {

      &:before,
      &:after {
        border: none !important;
        box-shadow: none !important;
        stroke: none !important;
      }
    }

    // 连接器图标特殊处理
    &[data-action='connect'] {

      svg,
      path,
      circle,
      rect,
      polygon {
        stroke-width: 0 !important;
      }
    }

    // 删除图标特殊处理
    &[data-action='delete'] {

      svg,
      path {
        fill: hsl(var(--destructive)) !important;
        stroke: none !important;
      }

      &:hover {
        background-color: transparent !important;
      }
    }
  }
}

:deep(.djs-popup-header) {
  background-color: hsl(var(--card)) !important;
  color: hsl(var(--foreground)) !important;
}

:deep(.djs-popup-body) {
  background-color: hsl(var(--card)) !important;
  border-color: hsl(var(--border)) !important;
}

:deep(.djs-popup-body .entry) {
  color: hsl(var(--foreground)) !important;
}

:deep(.djs-popup-body .entry:hover) {
  background-color: hsl(var(--accent-hover)) !important;
}

// 移除所有元素的焦点边框
:deep(.djs-container *) {

  &:focus,
  &:focus-visible {
    outline: none !important;
    box-shadow: none !important;
  }
}

// 移除画布的焦点边框
:deep(.djs-container svg) {

  &:focus,
  &:focus-visible {
    outline: none !important;
    box-shadow: none !important;
  }
}

.bpmn-dark-theme {
  :deep(.bpmn-canvas) {
    background-color: hsl(var(--background-deep)) !important;
  }

  // 移除暗黑主题下的画布焦点边框
  :deep(.djs-container),
  :deep(.djs-container svg),
  :deep(.djs-element) {

    &:focus,
    &:focus-visible,
    &:focus-within {
      outline: none !important;
      box-shadow: none !important;
    }
  }

  // 防止选中时出现浏览器默认的蓝色边框
  ::selection {
    background-color: hsla(var(--primary) / 0.2) !important;
  }

  // 全局图标修复
  :deep(.djs-container svg) {
    background-color: hsl(var(--background-deep)) !important;

    // 修复所有SVG图标元素
    path,
    polyline,
    rect,
    circle,
    polygon {
      stroke: hsl(var(--foreground)) !important;
    }

    // 强制所有图标元素具有较高的对比度
    .djs-visual {

      path,
      polyline,
      rect,
      circle,
      polygon {
        stroke-width: 1.5px !important;
      }
    }
  }

  // 工具栏图标修复
  :deep(.bpmn-icon-task),
  :deep(.bpmn-icon-start-event),
  :deep(.bpmn-icon-end-event),
  :deep(.bpmn-icon-intermediate-event),
  :deep(.bpmn-icon-gateway-none),
  :deep(.bpmn-icon-gateway-parallel),
  :deep(.bpmn-icon-gateway-xor),
  :deep(.bpmn-icon-gateway-or),
  :deep(.bpmn-icon-gateway-complex),
  :deep(.bpmn-icon-gateway-eventbased),
  :deep(.bpmn-icon-subprocess-expanded),
  :deep(.bpmn-icon-data-object),
  :deep(.bpmn-icon-data-store),
  :deep(.bpmn-icon-participant),
  :deep(.bpmn-icon-group),
  :deep(.bpmn-icon-connection),
  :deep(.bpmn-icon-connection-multi),
  :deep(.bpmn-icon-lasso-tool),
  :deep(.bpmn-icon-space-tool),
  :deep(.bpmn-icon-hand-tool),
  :deep(.bpmn-icon-global-connect-tool),
  :deep(.bpmn-icon-text-annotation) {
    color: hsl(var(--foreground)) !important;

    path,
    polyline,
    rect,
    circle,
    polygon,
    line {
      fill: hsl(var(--foreground)) !important;
      stroke: hsl(var(--foreground)) !important;
    }
  }

  // 修复元素基本样式
  :deep(.djs-element .djs-visual) {

    // 基本形状
    rect,
    circle,
    path,
    polygon {
      stroke: hsl(var(--foreground)) !important;
      stroke-width: 2px !important;
      fill: hsla(var(--card) / 0.8) !important;
    }

    // 线条元素
    polyline,
    line {
      stroke: hsl(var(--foreground)) !important;
      stroke-width: 2px !important;
    }

    // 文本标签
    text,
    tspan {
      fill: hsl(var(--foreground)) !important;
      stroke: none !important;
    }
  }

  // 特殊元素修复
  // 任务
  :deep(.djs-container .djs-shape[data-element-id*='Task'] .djs-visual rect) {
    fill: hsla(var(--primary) / 0.1) !important;
    stroke: hsl(var(--primary)) !important;
    stroke-width: 2px !important;
  }

  // 子流程
  :deep(.djs-container .djs-shape[data-element-id*='SubProcess'] .djs-visual rect) {
    fill: hsla(var(--accent) / 0.1) !important;
    stroke: hsl(var(--accent)) !important;
    stroke-width: 2px !important;
  }

  // 开始事件
  :deep(.djs-container .djs-shape[data-element-id*='StartEvent'] .djs-visual circle) {
    fill: hsla(var(--primary) / 0.1) !important;
    stroke: hsl(var(--primary)) !important;
    stroke-width: 2px !important;
  }

  // 结束事件
  :deep(.djs-container .djs-shape[data-element-id*='EndEvent'] .djs-visual circle) {
    fill: hsla(var(--destructive) / 0.1) !important;
    stroke: hsl(var(--destructive)) !important;
    stroke-width: 3px !important;
  }

  // 中间事件
  :deep(.djs-container .djs-shape[data-element-id*='IntermediateEvent'] .djs-visual circle) {
    fill: hsla(var(--warning) / 0.1) !important;
    stroke: hsl(var(--warning)) !important;
    stroke-width: 2px !important;
  }

  // 网关
  :deep(.djs-container .djs-shape[data-element-id*='Gateway'] .djs-visual polygon) {
    fill: hsla(var(--warning) / 0.2) !important;
    stroke: hsl(var(--warning)) !important;
    stroke-width: 2px !important;
  }

  // 连接线
  :deep(.djs-container .djs-connection .djs-visual path) {
    stroke: hsl(var(--foreground)) !important;
    stroke-width: 1.5px !important;
  }

  // 文本注释
  :deep(.djs-container .djs-shape[data-element-id*='TextAnnotation'] .djs-visual) {
    path {
      fill: transparent !important;
      stroke: hsl(var(--muted-foreground)) !important;
    }

    text {
      fill: hsl(var(--muted-foreground)) !important;
    }
  }

  // 数据对象
  :deep(.djs-container .djs-shape[data-element-id*='DataObject'] .djs-visual path),
  :deep(.djs-container .djs-shape[data-element-id*='DataStore'] .djs-visual path) {
    fill: hsla(var(--secondary) / 0.2) !important;
    stroke: hsl(var(--secondary)) !important;
  }

  // 确保所有标签文本可见
  :deep(.djs-container .djs-label) {
    fill: hsl(var(--foreground)) !important;
    stroke: none !important;
    // 添加文本阴影以提高可读性
    text-shadow: 0px 0px 2px hsla(var(--background) / 0.8) !important;
  }

  // 修复调色板样式
  :deep(.djs-palette) {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.6) !important;
    background-color: hsl(var(--background)) !important;
    border-color: hsl(var(--border)) !important;
  }

  :deep(.djs-palette-entries .entry) {
    color: hsl(var(--foreground)) !important;
    border-bottom: 1px solid hsla(var(--border) / 0.5) !important;

    &:hover {
      background-color: hsl(var(--accent-hover)) !important;
    }

    // 确保图标在暗色模式下可见
    i:before {
      color: hsl(var(--foreground)) !important;
    }
  }

  // 修复弹出窗口
  :deep(.djs-popup) {
    background-color: hsl(var(--background)) !important;
    border: 1px solid hsl(var(--border)) !important;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5) !important;

    .djs-popup-header {
      background-color: hsl(var(--accent-dark)) !important;
      color: hsl(var(--accent-foreground)) !important;
    }

    .entry {
      color: hsl(var(--foreground)) !important;

      &:hover {
        background-color: hsl(var(--accent-hover)) !important;
      }
    }

    // 修复搜索框
    .djs-popup-search input {
      background-color: hsl(var(--input)) !important;
      color: hsl(var(--foreground)) !important;
      border: 1px solid hsl(var(--border)) !important;

      &:focus {
        background-color: hsla(var(--primary) / 0.1) !important;
        border-color: hsl(var(--primary)) !important;
        outline: none !important;
        box-shadow: 0 0 0 2px hsla(var(--primary) / 0.2) !important;
      }
    }

    // 修复搜索图标
    .djs-popup-search-icon {
      color: hsl(var(--muted-foreground)) !important;
    }

    // 修复选中项
    .entry.selected {
      background-color: hsla(var(--primary) / 0.2) !important;
      color: hsl(var(--primary-foreground)) !important;

      // 确保选中项中的图标也有正确颜色
      i:before,
      svg,
      path,
      polygon,
      rect,
      circle {
        color: hsl(var(--primary-foreground)) !important;
        fill: hsl(var(--primary-foreground)) !important;
        stroke: hsl(var(--primary-foreground)) !important;
      }

      // 确保标签文本可见
      .djs-popup-label {
        color: hsl(var(--primary-foreground)) !important;
      }

      // 确保描述文本可见
      .djs-popup-entry-description {
        color: hsla(var(--primary-foreground) / 0.8) !important;
      }
    }

    // 修复类型选择器项
    .bpmn-replace-entry {
      background-color: transparent !important;

      &:hover {
        background-color: hsl(var(--accent-hover)) !important;
      }

      &.selected {
        background-color: hsla(var(--primary) / 0.2) !important;

        // 确保选中项的图标和文字清晰可见
        .entry-icon {
          filter: brightness(1.2) !important;
        }

        .entry-label {
          color: hsl(var(--primary-foreground)) !important;
          font-weight: 600 !important;
        }
      }
    }
  }

  // 修复选择样式
  :deep(.djs-container .selected .djs-outline) {
    stroke: hsl(var(--primary)) !important;
    stroke-width: 2px !important;
  }

  // 修复控制点
  :deep(.djs-bendpoint),
  :deep(.djs-segment-dragger) {
    fill: hsl(var(--primary)) !important;
    stroke: hsl(var(--background)) !important;
    stroke-width: 1px !important;
  }

  // 修复文本编辑
  :deep(.djs-direct-editing-content) {
    background-color: hsl(var(--background)) !important;
    border: 1px solid hsl(var(--border)) !important;
    color: hsl(var(--foreground)) !important;
    padding: 3px !important;
  }

  // 修复缩略图样式
  :deep(.djs-minimap) {
    background-color: hsla(var(--card) / 0.9) !important;
    border: 1px solid hsl(var(--border)) !important;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3) !important;

    // 修复缩略图标题和图标
    .djs-minimap-header {
      background-color: hsl(var(--accent-dark)) !important;
      border-bottom: 1px solid hsl(var(--border)) !important;
      color: hsl(var(--accent-foreground)) !important;
      padding: 4px 8px !important;

      // 修复关闭按钮
      .djs-minimap-close {
        background-color: transparent !important;
        border: none !important;
        color: hsl(var(--accent-foreground)) !important;

        &:hover {
          color: hsl(var(--destructive)) !important;
        }

        // 修复X图标
        &:before {
          color: hsl(var(--accent-foreground)) !important;
          content: '×' !important;
          font-size: 16px !important;
          font-weight: bold !important;
        }
      }

      // 修复标题文本
      .djs-minimap-title {
        color: hsl(var(--accent-foreground)) !important;
        font-weight: bold !important;
      }
    }

    // 修复缩略图内容
    .djs-minimap-viewport {
      border: 2px solid hsl(var(--primary)) !important;
    }

    // 修复打开/关闭的图标
    .djs-minimap-toggle {
      background-color: hsla(var(--card) / 0.9) !important;
      border: 1px solid hsl(var(--border)) !important;
      box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3) !important;
      color: hsl(var(--foreground)) !important;

      &:hover {
        background-color: hsl(var(--accent-hover)) !important;
      }

      // 修复图标
      &:before {
        color: hsl(var(--foreground)) !important;
      }
    }
  }

  // 新增工具栏样式
  :deep(.djs-context-pad) {
    background-color: transparent !important;
    box-shadow: none !important;

    .entry {
      background-color: transparent !important;
      border: none !important;
      box-shadow: none !important;

      &:hover {
        background-color: transparent !important;
      }

      // 确保图标在暗色模式下可见
      i:before {
        color: hsl(var(--foreground)) !important;
      }
      
      svg,
      path,
      circle,
      rect,
      polygon {
        fill: hsl(var(--foreground)) !important;
        stroke: none !important;
      }
    }
  }

  :deep(.bio-properties-panel-header) {
    background-color: hsla(var(--card) / 0.9) !important;
    color: #ffffff !important;
    border-bottom: 1px solid hsla(var(--border) / 0.7) !important;
  }
  
  :deep(.bio-properties-panel-group-header) {
    background-color: hsla(var(--card) / 0.9) !important;
    color: #ffffff !important;
    border-bottom: 1px solid hsla(var(--border) / 0.5) !important;
    
    .bio-properties-panel-dot {
      background-color: hsl(var(--primary)) !important;
    }
    
    .bio-properties-panel-arrow-right,
    .bio-properties-panel-add-entry,
    .bio-properties-panel-collapsible-entry-arrow {
      fill: hsl(var(--primary)) !important;
    }
    
    &:hover {
      background-color: hsla(var(--card) / 0.7) !important;
    }
  }
  
  :deep(.bio-properties-panel-group) {
    background-color: hsla(var(--card) / 0.9) !important;
    color: #ffffff !important;
    border-bottom: 1px solid hsla(var(--border) / 0.3) !important;
    
    /* Form elements styling */
    input, textarea, select {
      background-color: hsla(var(--muted) / 0.7) !important;
      color: #ffffff !important;
      border: 1px solid hsla(var(--border) / 0.8) !important;
      border-radius: 4px;
      padding: 4px 8px;
      
      &:focus {
        border-color: hsl(var(--primary)) !important;
        outline: none;
        box-shadow: 0 0 0 2px hsla(var(--primary) / 0.3) !important;
      }
      
      &:hover:not(:focus) {
        border-color: hsla(var(--border)) !important;
      }
    }
    
    /* Labels and descriptions */
    label {
      color: hsl(var(--foreground)) !important;
      font-weight: 500;
    }
    
    .bio-properties-panel-description {
      color: hsla(var(--muted-foreground) / 0.9) !important;
      font-size: 0.9em;
      margin-top: 2px;
    }
    
    /* Nested entries indentation and borders */
    .bio-properties-panel-entry {
      padding: 6px 8px;
      border-bottom: 1px solid hsla(var(--border) / 0.2) !important;
      
      &:last-child {
        border-bottom: none;
      }
    }
    
    /* Collapsible entries */
    .bio-properties-panel-collapsible-entry {
      background-color: hsla(var(--muted) / 0.3) !important;
      border-radius: 4px;
      margin: 4px 0;
      
      .bio-properties-panel-collapsible-entry-header {
        padding: 6px 8px;
        border-bottom: 1px solid hsla(var(--border) / 0.3) !important;
        
        &:hover {
          background-color: hsla(var(--muted) / 0.5) !important;
        }
      }
      
      .bio-properties-panel-collapsible-entry-content {
        padding: 4px 8px 4px 16px;
      }
    }
  }
  
  :deep(.bio-properties-panel-header-icon) {
    color: hsl(var(--primary)) !important;
    fill: hsl(var(--primary)) !important;
  }
  
  :deep(.bio-properties-panel-add-entry) {
    fill: hsl(var(--primary)) !important;
    
    &:hover {
      fill: hsl(var(--primary-foreground)) !important;
      background-color: hsla(var(--primary) / 0.2) !important;
      border-radius: 50%;
    }
  }
  
  /* Add visual indication for active/selected items */
  :deep(.bio-properties-panel-active) {
    background-color: hsla(var(--primary) / 0.15) !important;
    border-left: 3px solid hsl(var(--primary)) !important;
  }
  
  /* Improve scrollbar visibility */
  :deep(.bio-properties-panel) {
    scrollbar-width: thin;
    scrollbar-color: hsla(var(--muted-foreground) / 0.5) transparent;
    
    &::-webkit-scrollbar {
      width: 8px;
    }
    
    &::-webkit-scrollbar-track {
      background: transparent;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: hsla(var(--muted-foreground) / 0.5);
      border-radius: 4px;
      
      &:hover {
        background-color: hsla(var(--muted-foreground) / 0.8);
      }
    }
  }
}

